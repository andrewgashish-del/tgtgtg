
import os
import time
import random
import google.generativeai as genai
from datetime import datetime
import requests

def generate_post(prompt):
    try:
        response = model.generate_content(prompt)
        return response.text
    except Exception as e:
        print("‚ùå –û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Ç–µ–∫—Å—Ç–∞:", e)
        return None

def insert_links(post_text, offer_link=None, promo_link=None):
    cta_templates = [
        f'üëâ <a href="{offer_link}">–£–∑–Ω–∞—Ç—å –±–æ–ª—å—à–µ</a>',
        f'üî• <a href="{offer_link}">–ü–æ–ª—É—á–∏—Ç—å –±–æ–Ω—É—Å</a>',
        f'üì≤ <a href="{offer_link}">–û—Ç–∫—Ä—ã—Ç—å –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ</a>'
    ]
    promo_templates = [
        f'üì¢ –¢–∞–∫–∂–µ —Ä–µ–∫–æ–º–µ–Ω–¥—É—é –∫–∞–Ω–∞–ª –ø–æ —Ç—Ä–µ–π–¥–∏–Ω–≥—É: <a href="{promo_link}">–ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å</a>',
        f'üíπ –í–æ—Ç –∫–∞–Ω–∞–ª, –≥–¥–µ —è —Ä–∞–∑–±–∏—Ä–∞—é —Å–¥–µ–ª–∫–∏ –≤ –∫—Ä–∏–ø—Ç–µ: <a href="{promo_link}">–ø–æ–¥–ø–∏—Å–∞—Ç—å—Å—è</a>',
    ]

    cta = random.choice(cta_templates) if offer_link else ''
    promo = random.choice(promo_templates) if promo_link else ''
    method = random.choice(['start', 'middle', 'end'])

    if method == 'start':
        return promo + '\n\n' + post_text + '\n\n' + cta
    elif method == 'middle':
        parts = post_text.split('. ')
        if len(parts) > 2:
            insert_index = len(parts) // 2
            parts.insert(insert_index, promo)
            post_text = '. '.join(parts)
        return post_text + '\n\n' + cta
    else:
        return post_text + '\n\n' + promo + '\n\n' + cta

def send_to_telegram(token, chat_id, text):
    url = f"https://api.telegram.org/bot{token}/sendMessage"
    payload = {
        'chat_id': chat_id,
        'text': text,
        'parse_mode': 'HTML'
    }
    try:
        response = requests.post(url, data=payload)
        if response.status_code == 200:
            print("‚úÖ –¢–µ–∫—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ.")
        else:
            print("‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ç–µ–∫—Å—Ç–∞:", response.text)
    except Exception as e:
        print("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Ç–µ–∫—Å—Ç–∞:", e)

def post_once():
    print(f"üïí –ó–∞–ø—É—Å–∫ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏: {datetime.now().strftime('%H:%M:%S')}")
    prompt = os.getenv("GLOBAL_TOPIC", "–§–∏–Ω–∞–Ω—Å–æ–≤–∞—è –º–æ—Ç–∏–≤–∞—Ü–∏—è.")
    offer_link = os.getenv("OFFER_LINK")
    promo_link = os.getenv("PROMO_LINK")
    telegram_token = os.getenv("TELEGRAM_TOKEN")
    telegram_chat_id = os.getenv("TELEGRAM_CHAT_ID")
    style = os.getenv("POST_STYLE", "–¥—Ä—É–∂–µ–ª—é–±–Ω—ã–π –∏ –æ–±–æ–¥—Ä—è—é—â–∏–π —Å—Ç–∏–ª—å –ø–æ–¥–∞—á–∏")

    full_prompt = f"{prompt}\n\n–°—Ç–∏–ª—å: {style}"
    post = generate_post(full_prompt)
    if post:
        post = insert_links(post, offer_link, promo_link)
        send_to_telegram(telegram_token, telegram_chat_id, post)

if __name__ == "__main__":
    genai.configure(api_key=os.getenv("GEMINI_KEY"))
    model = genai.GenerativeModel("gemini-pro")

    print("ü§ñ –ê–≤—Ç–æ–ø–æ—Å—Ç–∏–Ω–≥-–±–æ—Ç –∑–∞–ø—É—â–µ–Ω. –ü—É–±–ª–∏–∫–∞—Ü–∏–∏ –∫–∞–∂–¥—ã–µ 5 –º–∏–Ω—É—Ç.")
    while True:
        post_once()
        time.sleep(300)
